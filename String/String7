/*Longest Palindrome in a String*/
class Solution{

    static String longestPalin(String S){

        int N = S.length();

        int [][] dp = new int[N][N];

        String maxStr = "";

        for(int g = 0; g < S.length(); g++){

            for(int i=0, j = g; j< S.length(); i++, j++){

                if(g == 0){

                    dp[i][j] = 1;

                }

                else if(g== 1){

                    if(S.charAt(i) == S.charAt(j)) dp[i][j] = 1;

                    else dp[i][j] = 0;

                }

                else {

                    if(S.charAt(i) == S.charAt(j) && dp[i+1][j-1] == 1) dp[i][j] = 1;

                    else dp[i][j] = 0;

                }

            }

        }

        for(int i=0; i<N; i++){

            for(int j=0; j<N; j++){

                if(dp[i][j] == 1){

                    String sbstr = "";

                    sbstr = S.substring(i,j+1);

                    if(maxStr.length() == 0 || maxStr.length() < sbstr.length()) maxStr = sbstr;

                }

                

            } 

        }

        return maxStr;

    }

 

}
